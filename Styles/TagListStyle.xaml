<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI4All.Styles">
    

    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UI4All;component/Resources/Icons.xaml"/>
        <ResourceDictionary Source="/UI4All;component/Resources/Brushes.xaml"/>
        <ResourceDictionary Source="/UI4All;component/Resources/Shadows.xaml"/>
    </ResourceDictionary.MergedDictionaries>



    
    <Style x:Key="EditTextBoxTagsList_TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource Accent_Tag_Text}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="SelectionBrush" Value="{StaticResource Accent_Violet}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="LayoutGrid">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      Margin="5 0 5 0" />

                        <Label x:Name="WaterMark"
                               Margin="2"
                               Grid.Column="0"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Foreground="{StaticResource Accent_Tag_Text_Watermark}"
                               Content="Tag..."
                               Padding="5 0 5 0"
                               FontWeight="Light"             
                               Visibility="Hidden"
                               FontSize="16"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="WaterMark"  Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TagsListDeleteButtton_ButttonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border CornerRadius="4 0 0 4" Background="{TemplateBinding Background}"/>
                        <Path Data="{StaticResource Delete_Icon}" 
                              Stroke="{StaticResource Accent_Foreground}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Stretch="UniformToFill" 
                              Height="14" 
                              Width="14"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="True">

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddTagButtton_ButtonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource AccentGreen}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border CornerRadius="0 4 4 0" Background="{TemplateBinding Background}"/>
                        <Path Data="{StaticResource Add_Icon}" 
                              Fill="{StaticResource Accent_Tag_Button}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Stretch="UniformToFill" 
                              Height="14" 
                              Width="14"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="True">

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TagsList_ItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="0 0 10 10"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="32" MinWidth="64" HorizontalAlignment="Left">
                        <Grid x:Name="AddMode" Visibility="Hidden">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="4 5 5 4" Grid.ColumnSpan="2" 
                                    Background="{StaticResource Accent_Tag_Surface}"/>
                            <!--/> Effect="{StaticResource ShadowDepth2}"-->

                            <Grid>
                                <TextBox Style="{StaticResource EditTextBoxTagsList_TextBoxStyle}" 
                                         Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>

                            <Grid Grid.Column="1">
                                <Button x:Name="AddTagButton"  
                                        Style="{StaticResource AddTagButtton_ButtonStyle}"
                                        Command="{Binding DataContext.AddTag_Command, 
                                                    RelativeSource={RelativeSource AncestorType=ListBox}}"   
                                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" 
                                        />
                            </Grid>

                        </Grid>

                        <Grid x:Name="EditMode">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="5" 
                                    Grid.ColumnSpan="2" 
                                    Background="{StaticResource Accent_Tag_Surface}" 
                                    />
                            <!--Effect="{StaticResource ShadowDepth2}"-->

                            <!--View/Delete Mode-->
                            <Grid>
                                <Grid x:Name="View_Mode" Width="32">
                                    <Border CornerRadius="4 0 0 4" 
                                            Background="{StaticResource AccentYellowSelection}"/>
                                    <Label Content="#"
                                           Foreground="{StaticResource Accent_Tag_Text}" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           FontSize="{TemplateBinding FontSize}"/>
                                </Grid>

                                <Grid x:Name="Delete_Mode" Width="32" Opacity="0">
                                    <Button x:Name="DeleteButton" 
                                            Background="{StaticResource Accent_Red}"
                                            Style="{StaticResource TagsListDeleteButtton_ButttonStyle}"
                                            Command="{Binding DataContext.DeleteTag_Command, 
                                                        RelativeSource={RelativeSource AncestorType=ListBox}}"   
                                            CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" 
                                            Width="32"/>
                                </Grid>
                            </Grid>

                            <Grid Grid.Column="1">
                                <TextBox Style="{StaticResource EditTextBoxTagsList_TextBoxStyle}" 
                                         Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>

                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="True">
                            
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="1" To="0" Duration="0:0:0.2" 
                                                         Storyboard.TargetProperty="Opacity" 
                                                         Storyboard.TargetName="View_Mode"/>
                                        <DoubleAnimation From="0" To="1" Duration="0:0:0.2" 
                                                         Storyboard.TargetProperty="Opacity" 
                                                         Storyboard.TargetName="Delete_Mode"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1" Duration="0:0:0.2" 
                                                         Storyboard.TargetProperty="Opacity" 
                                                         Storyboard.TargetName="View_Mode"/>
                                        <DoubleAnimation From="1" To="0" Duration="0:0:0.2" 
                                                         Storyboard.TargetProperty="Opacity" 
                                                         Storyboard.TargetName="Delete_Mode"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger SourceName="Delete_Mode" Property="Opacity" Value="0">
                            <Setter TargetName="Delete_Mode" Property="Visibility" Value="Hidden"/>
                        </Trigger>


                        <DataTrigger Binding="{Binding IsAddMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter TargetName="AddMode" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="EditMode" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="TagsList_ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border CornerRadius="20" 
                            x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Auto" Margin="0,4,0,4">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="TagsList_PanelTemplate">
        <WrapPanel Orientation="Horizontal"  
                   IsItemsHost="True"  
                   Width="{Binding Path=ActualWidth, 
                            RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, 
                                AncestorType={x:Type ScrollContentPresenter}}}">
        </WrapPanel>
    </ItemsPanelTemplate>
</ResourceDictionary>