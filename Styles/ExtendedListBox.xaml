<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI4All.Styles">
    
    
    <Style x:Key="ExtendedList_ItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Height" Value="42"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="{TemplateBinding Height}" Background="Transparent">
                        <Border BorderThickness="0 0 0 1">
                            <Border.BorderBrush>
                                <RadialGradientBrush RadiusX="1.2" RadiusY="1" GradientOrigin="0.5,0.5">
                                    <GradientStop Color="Black" Offset="0" />
                                    <GradientStop Color="Transparent" Offset="1" />
                                </RadialGradientBrush>
                            </Border.BorderBrush>
                        </Border>

                        <Grid VerticalAlignment="Center" Margin="10 0 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition  Width="Auto"/>
                                <ColumnDefinition  Width="*" />
                                <ColumnDefinition  Width="Auto"/>
                            </Grid.ColumnDefinitions>


                            <Grid Background="Transparent">
                                <Label Content="{Binding Name}" FontSize="14" FontWeight="Bold" VerticalAlignment="Center"/>
                            </Grid>

                            <Line x:Name="Decorator" 
                                  Grid.Column="1"  
                                  Width="1" 
                                  Y1="0"
                                  X1="0" 
                                  Y2="28" 
                                  X2="0" 
                                  VerticalAlignment="Center" 
                                  Margin="4 0 0 4">
                                <Line.Stroke>
                                    <RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,0.5">
                                        <GradientStop Color="Black" Offset="0" />
                                        <GradientStop Color="Transparent" Offset="1" />
                                    </RadialGradientBrush>
                                </Line.Stroke>
                            </Line>
                            <TextBox Grid.Column="2" Text="{Binding Content}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="FontFamily" Value="Segoe UI"/>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="SelectionBrush" Value="{StaticResource Accent_Violet}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Grid x:Name="LayoutGrid">
                                                        <Border CornerRadius="2" Background="{StaticResource Accent_Surface}"/>
                                                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0,4,0" />

                                                        <Label x:Name="WaterMark"
                                                               Margin="2"
                                                               Grid.Column="0"
                                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                               Foreground="DarkGray"
                                                               Content="Content..."
                                                               Padding="5,0,5,0"
                                                               FontWeight="Light"             
                                                               FontFamily="Segoe UI"
                                                               Visibility="Hidden"
                                                               FontSize="16"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter TargetName="WaterMark"  Property="Visibility" Value="Visible"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <StackPanel Orientation="Horizontal" Grid.Column="3">
                                <Button x:Name="GeneratePassword_Button" Height="32" Width="32" Cursor="Hand" Margin="10 0 10 0" 
                                    Command="{Binding DataContext.GeneratePassword_Command, RelativeSource={RelativeSource AncestorType=ListBox}}"   
                                    CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" >
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="{StaticResource Accent_Surface}"/>
                                            <Setter Property="Foreground" Value="Gray"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid>
                                                            <Border CornerRadius="2" Background="{TemplateBinding Background}"/>
                                                            <Path Data="{StaticResource Key_Icon}" 
                                                              Fill="{TemplateBinding Foreground}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Stretch="Uniform" 
                                                              Height="18" 
                                                              Width="18"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource Accent_Violet}"/>
                                                            </Trigger>
                                                            <!--<Trigger Property="IsMouseOver" Value="True">

                                                        </Trigger>-->
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button x:Name="Copy_Button" Height="32" Width="32" Cursor="Hand"  
                                    Command="{Binding DataContext.CopyItem_Command, RelativeSource={RelativeSource AncestorType=ListBox}}"   
                                    CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" >
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Foreground" Value="Gray"/>
                                            <Setter Property="Background" Value="{StaticResource Accent_Surface}"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid>
                                                            <Border CornerRadius="2" Background="{TemplateBinding Background}"/>
                                                            <Path Data="{StaticResource Copy_Icon}" 
                                                              Fill="{TemplateBinding Foreground}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Stretch="Uniform" 
                                                              Height="18" 
                                                              Width="18"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource Accent_Violet}"/>
                                                            </Trigger>
                                                            <!--<Trigger Property="IsMouseOver" Value="True">

                                                        </Trigger>-->
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button x:Name="Delete_Button" Grid.Column="3" Margin="10 0 10 0" Height="32" Width="32" Cursor="Hand"  
                                    Command="{Binding DataContext.DeleteItem_Command, RelativeSource={RelativeSource AncestorType=ListBox}}"   
                                    CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" >
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Foreground" Value="Gray"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="{StaticResource Accent_Surface}"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid>
                                                            <Border CornerRadius="2" Background="{TemplateBinding Background}"/>
                                                            <Path Data="{StaticResource Delete_Icon}" 
                                                              Stroke="{TemplateBinding Foreground}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Stretch="UniformToFill" 
                                                              Height="14" 
                                                              Width="14"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource Accent_Violet}"/>
                                                            </Trigger>

                                                            <!--<Trigger Property="IsMouseOver" Value="True">
                                                               
                                                            </Trigger>-->
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </Grid>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <!--<Trigger Property="IsSelected" Value="True">
                            
                        </Trigger>-->

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="Copy_Button" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="GeneratePassword_Button" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ExtendedList_ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border CornerRadius="20" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Auto" Margin="0,4,0,4">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
</ResourceDictionary>